
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.26+1 (git sha1 b1a011138, x86_64-w64-mingw32-g++ 9.2.1 -Os)


-- Running command `read_verilog -sv ../design/Maquina_FSM.sv ; synth_gowin -top Maquina_FSM -json .json' --

1. Executing Verilog-2005 frontend: ../design/Maquina_FSM.sv
Parsing SystemVerilog input from `../design/Maquina_FSM.sv' to AST representation.
Generating RTLIL representation for module `\Maquina_FSM'.
Successfully finished Verilog frontend.

2. Executing SYNTH_GOWIN pass.

2.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Analyzing design hierarchy..
Top module:  \Maquina_FSM

2.2.2. Analyzing design hierarchy..
Top module:  \Maquina_FSM
Removed 0 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$280'.
Cleaned up 1 empty switch.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$276 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$274 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$272 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$270 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$268 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$266 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$264 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$262 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$256 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$254 in module DFFC.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$252 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$250 in module DFFP.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$248 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$246 in module DFFR.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$244 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$242 in module DFFS.
Marked 1 switch rules as full_case in process $proc$../design/Maquina_FSM.sv:61$14 in module Maquina_FSM.
Marked 10 switch rules as full_case in process $proc$../design/Maquina_FSM.sv:0$1 in module Maquina_FSM.
Removed a total of 0 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 32 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$277'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$275'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$273'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$271'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$269'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$267'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$265'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$263'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$261'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$259'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$257'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$255'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$253'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$251'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$249'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$247'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$245'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$243'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$241'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$239'.
  Set init value: \Q = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$276'.
Found async reset \CLEAR in `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$274'.
Found async reset \PRESET in `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$272'.
Found async reset \PRESET in `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$270'.
Found async reset \CLEAR in `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$256'.
Found async reset \CLEAR in `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$254'.
Found async reset \PRESET in `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$252'.
Found async reset \PRESET in `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$250'.
Found async reset \rst in `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:61$14'.

2.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~28 debug messages>

2.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$280'.
Creating decoders for process `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$277'.
Creating decoders for process `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$276'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$275'.
Creating decoders for process `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$274'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$273'.
Creating decoders for process `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$272'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$271'.
Creating decoders for process `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$270'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$269'.
Creating decoders for process `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$268'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$267'.
Creating decoders for process `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$266'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$265'.
Creating decoders for process `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$264'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$263'.
Creating decoders for process `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$262'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$261'.
Creating decoders for process `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:381$260'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$259'.
Creating decoders for process `\DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:366$258'.
Creating decoders for process `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$257'.
Creating decoders for process `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$256'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$255'.
Creating decoders for process `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$254'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$253'.
Creating decoders for process `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$252'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$251'.
Creating decoders for process `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$250'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$249'.
Creating decoders for process `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$248'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$247'.
Creating decoders for process `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$246'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$245'.
Creating decoders for process `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$244'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$243'.
Creating decoders for process `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$242'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$241'.
Creating decoders for process `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:194$240'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$239'.
Creating decoders for process `\DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:179$238'.
Creating decoders for process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$15'.
Creating decoders for process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:61$14'.
     1/1: $0\state[6:0]
Creating decoders for process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$1'.
     1/10: $10\next_state[6:0]
     2/10: $9\next_state[6:0]
     3/10: $8\next_state[6:0]
     4/10: $7\next_state[6:0]
     5/10: $6\next_state[6:0]
     6/10: $5\next_state[6:0]
     7/10: $4\next_state[6:0]
     8/10: $3\next_state[6:0]
     9/10: $2\next_state[6:0]
    10/10: $1\next_state[6:0]

2.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\Maquina_FSM.\CLRCNTR' from process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$15'.
No latch inferred for signal `\Maquina_FSM.\CLRTIMER' from process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$15'.
No latch inferred for signal `\Maquina_FSM.\INC' from process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$15'.
No latch inferred for signal `\Maquina_FSM.\UNLOCK' from process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$15'.
No latch inferred for signal `\Maquina_FSM.\ERROR' from process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$15'.
No latch inferred for signal `\Maquina_FSM.\next_state' from process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$1'.

2.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ALU.\C' using process `\ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$280'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$280'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$276'.
  created $adff cell `$procdff$466' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$274'.
  created $adff cell `$procdff$467' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$272'.
  created $adff cell `$procdff$468' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$270'.
  created $adff cell `$procdff$469' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$268'.
  created $dff cell `$procdff$470' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$266'.
  created $dff cell `$procdff$471' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$264'.
  created $dff cell `$procdff$472' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$262'.
  created $dff cell `$procdff$473' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:381$260'.
  created $dff cell `$procdff$474' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:366$258'.
  created $dff cell `$procdff$475' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$256'.
  created $adff cell `$procdff$476' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$254'.
  created $adff cell `$procdff$477' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$252'.
  created $adff cell `$procdff$478' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$250'.
  created $adff cell `$procdff$479' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$248'.
  created $dff cell `$procdff$480' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$246'.
  created $dff cell `$procdff$481' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$244'.
  created $dff cell `$procdff$482' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$242'.
  created $dff cell `$procdff$483' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:194$240'.
  created $dff cell `$procdff$484' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:179$238'.
  created $dff cell `$procdff$485' with positive edge clock.
Creating register for signal `\Maquina_FSM.\state' using process `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:61$14'.
  created $adff cell `$procdff$486' with positive edge clock and positive level reset.

2.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$280'.
Removing empty process `DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$277'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$276'.
Removing empty process `DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$276'.
Removing empty process `DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$275'.
Removing empty process `DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$274'.
Removing empty process `DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$273'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$272'.
Removing empty process `DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$272'.
Removing empty process `DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$271'.
Removing empty process `DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$270'.
Removing empty process `DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$269'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$268'.
Removing empty process `DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$268'.
Removing empty process `DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$267'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$266'.
Removing empty process `DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$266'.
Removing empty process `DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$265'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$264'.
Removing empty process `DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$264'.
Removing empty process `DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$263'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$262'.
Removing empty process `DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$262'.
Removing empty process `DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$261'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:381$260'.
Removing empty process `DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:381$260'.
Removing empty process `DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$259'.
Removing empty process `DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:366$258'.
Removing empty process `DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$257'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$256'.
Removing empty process `DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$256'.
Removing empty process `DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$255'.
Removing empty process `DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$254'.
Removing empty process `DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$253'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$252'.
Removing empty process `DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$252'.
Removing empty process `DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$251'.
Removing empty process `DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$250'.
Removing empty process `DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$249'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$248'.
Removing empty process `DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$248'.
Removing empty process `DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$247'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$246'.
Removing empty process `DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$246'.
Removing empty process `DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$245'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$244'.
Removing empty process `DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$244'.
Removing empty process `DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$243'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$242'.
Removing empty process `DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$242'.
Removing empty process `DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$241'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:194$240'.
Removing empty process `DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:194$240'.
Removing empty process `DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$239'.
Removing empty process `DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:179$238'.
Removing empty process `Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$15'.
Removing empty process `Maquina_FSM.$proc$../design/Maquina_FSM.sv:61$14'.
Found and cleaned up 10 empty switches in `\Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$1'.
Removing empty process `Maquina_FSM.$proc$../design/Maquina_FSM.sv:0$1'.
Cleaned up 28 empty switches.

2.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.4. Executing FLATTEN pass (flatten design).

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing SYNTH pass.

2.7.1. Executing PROC pass (convert processes to netlists).

2.7.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.7.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.7.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.7.1.4. Executing PROC_INIT pass (extract init attributes).

2.7.1.5. Executing PROC_ARST pass (detect async resets in processes).

2.7.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.7.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.7.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.7.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.7.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.7.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.7.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..
Removed 0 unused cells and 35 unused wires.
<suppressed ~1 debug messages>

2.7.4. Executing CHECK pass (checking for obvious problems).
Checking module Maquina_FSM...
Found and reported 0 problems.

2.7.5. Executing OPT pass (performing simple optimizations).

2.7.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
<suppressed ~105 debug messages>
Removed a total of 35 cells.

2.7.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Maquina_FSM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$372.
    dead port 2/2 on $mux $procmux$379.
    dead port 2/2 on $mux $procmux$387.
    dead port 1/2 on $mux $procmux$397.
    dead port 2/2 on $mux $procmux$399.
    dead port 2/2 on $mux $procmux$408.
    dead port 1/2 on $mux $procmux$419.
    dead port 2/2 on $mux $procmux$421.
    dead port 2/2 on $mux $procmux$431.
    dead port 1/2 on $mux $procmux$443.
    dead port 2/2 on $mux $procmux$445.
    dead port 2/2 on $mux $procmux$456.
Removed 12 multiplexer ports.
<suppressed ~1 debug messages>

2.7.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Maquina_FSM.
Performed a total of 0 changes.

2.7.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.7.5.6. Executing OPT_DFF pass (perform DFF optimizations).

2.7.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

2.7.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.5.9. Rerunning OPT passes. (Maybe there is more to do..)

2.7.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Maquina_FSM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.7.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Maquina_FSM.
Performed a total of 0 changes.

2.7.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.7.5.13. Executing OPT_DFF pass (perform DFF optimizations).

2.7.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.7.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.5.16. Finished OPT passes. (There is nothing left to do.)

2.7.6. Executing FSM pass (extract and optimize FSM).

2.7.6.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking Maquina_FSM.state as FSM state register:
    Circuit seems to be self-resetting.

2.7.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.7.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.7.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.7.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.7.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.7.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.7.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.7.7. Executing OPT pass (performing simple optimizations).

2.7.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.7.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Maquina_FSM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.7.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Maquina_FSM.
Performed a total of 0 changes.

2.7.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.7.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$486 ($adff) from module Maquina_FSM (D = \next_state, Q = \state).

2.7.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.7.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.7.9. Rerunning OPT passes. (Maybe there is more to do..)

2.7.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Maquina_FSM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.7.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Maquina_FSM.
Performed a total of 0 changes.

2.7.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.7.7.13. Executing OPT_DFF pass (perform DFF optimizations).

2.7.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.7.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.7.16. Finished OPT passes. (There is nothing left to do.)

2.7.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell Maquina_FSM.$eq$../design/Maquina_FSM.sv:35$2 ($eq).
Removed top 1 bits (of 4) from port B of cell Maquina_FSM.$ne$../design/Maquina_FSM.sv:36$4 ($ne).
Removed top 3 bits (of 7) from port B of cell Maquina_FSM.$eq$../design/Maquina_FSM.sv:68$16 ($eq).
Removed top 1 bits (of 7) from port B of cell Maquina_FSM.$eq$../design/Maquina_FSM.sv:68$18 ($eq).
Removed top 2 bits (of 7) from port B of cell Maquina_FSM.$eq$../design/Maquina_FSM.sv:69$21 ($eq).
Removed top 6 bits (of 7) from port B of cell Maquina_FSM.$eq$../design/Maquina_FSM.sv:70$23 ($eq).
Removed top 5 bits (of 7) from port B of cell Maquina_FSM.$eq$../design/Maquina_FSM.sv:71$27 ($eq).
Removed top 4 bits (of 7) from port B of cell Maquina_FSM.$eq$../design/Maquina_FSM.sv:72$32 ($eq).
Removed top 1 bits (of 7) from mux cell Maquina_FSM.$procmux$377 ($mux).
Removed top 1 bits (of 7) from wire Maquina_FSM.$9\next_state[6:0].

2.7.9. Executing PEEPOPT pass (run peephole optimizers).

2.7.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.7.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module Maquina_FSM:
  created 0 $alu and 0 $macc cells.

2.7.12. Executing SHARE pass (SAT-based resource sharing).

2.7.13. Executing OPT pass (performing simple optimizations).

2.7.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.7.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Maquina_FSM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.7.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Maquina_FSM.
Performed a total of 0 changes.

2.7.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.7.13.6. Executing OPT_DFF pass (perform DFF optimizations).

2.7.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.7.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.7.13.9. Finished OPT passes. (There is nothing left to do.)

2.7.14. Executing MEMORY pass.

2.7.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.7.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.7.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.7.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.7.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.7.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.7.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.7.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.7.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.7.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.7.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.8. Executing MEMORY_LIBMAP pass (mapping memories to cells).

2.9. Executing TECHMAP pass (map to technology primitives).

2.9.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

2.9.2. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/brams_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

2.9.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.
<suppressed ~5 debug messages>

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.10.3. Executing OPT_DFF pass (perform DFF optimizations).

2.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

2.10.5. Finished fast OPT passes.

2.11. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Maquina_FSM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Maquina_FSM.
    Consolidated identical input bits for $mux cell $procmux$377:
      Old ports: A=6'000001, B=6'100000, Y=$9\next_state[6:0]
      New ports: A=2'01, B=2'10, Y={ $9\next_state[6:0] [5] $9\next_state[6:0] [0] }
      New connections: $9\next_state[6:0] [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $procmux$406:
      Old ports: A=7'0010000, B=7'0001000, Y=$6\next_state[6:0]
      New ports: A=2'10, B=2'01, Y=$6\next_state[6:0] [4:3]
      New connections: { $6\next_state[6:0] [6:5] $6\next_state[6:0] [2:0] } = 5'00000
    Consolidated identical input bits for $mux cell $procmux$429:
      Old ports: A=7'0010000, B=7'0000100, Y=$4\next_state[6:0]
      New ports: A=2'10, B=2'01, Y={ $4\next_state[6:0] [4] $4\next_state[6:0] [2] }
      New connections: { $4\next_state[6:0] [6:5] $4\next_state[6:0] [3] $4\next_state[6:0] [1:0] } = 5'00000
    Consolidated identical input bits for $mux cell $procmux$454:
      Old ports: A=7'0010000, B=7'0000010, Y=$2\next_state[6:0]
      New ports: A=2'10, B=2'01, Y={ $2\next_state[6:0] [4] $2\next_state[6:0] [1] }
      New connections: { $2\next_state[6:0] [6:5] $2\next_state[6:0] [3:2] $2\next_state[6:0] [0] } = 5'00000
    New ctrl vector for $pmux cell $procmux$459: { $eq$../design/Maquina_FSM.sv:70$23_Y $eq$../design/Maquina_FSM.sv:71$27_Y $eq$../design/Maquina_FSM.sv:72$32_Y $eq$../design/Maquina_FSM.sv:69$21_Y }
  Optimizing cells in module \Maquina_FSM.
    Consolidated identical input bits for $pmux cell $procmux$459:
      Old ports: A=7'0000001, B={ $2\next_state[6:0] $4\next_state[6:0] $6\next_state[6:0] 1'0 $9\next_state[6:0] }, Y=\next_state
      New ports: A=6'000001, B={ 1'0 $2\next_state[6:0] [4] 2'00 $2\next_state[6:0] [1] 2'00 $4\next_state[6:0] [4] 1'0 $4\next_state[6:0] [2] 3'000 $6\next_state[6:0] [4:3] 3'000 $9\next_state[6:0] [5] 4'0000 $9\next_state[6:0] [0] }, Y=\next_state [5:0]
      New connections: \next_state [6] = 1'0
  Optimizing cells in module \Maquina_FSM.
Performed a total of 6 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Maquina_FSM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Maquina_FSM.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$487 ($adffe) from module Maquina_FSM.

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.12.16. Rerunning OPT passes. (Maybe there is more to do..)

2.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Maquina_FSM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Maquina_FSM.
Performed a total of 0 changes.

2.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
Removed a total of 0 cells.

2.12.20. Executing OPT_DFF pass (perform DFF optimizations).

2.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..

2.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.12.23. Finished OPT passes. (There is nothing left to do.)

2.13. Executing TECHMAP pass (map to technology primitives).

2.13.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/techmap.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.13.2. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/arith_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_gw1n_alu'.
Successfully finished Verilog frontend.

2.13.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$f3115659d5e2977ebd2cb01ff3557fc5f6187689\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
No more expansions possible.
<suppressed ~141 debug messages>

2.14. Executing OPT pass (performing simple optimizations).

2.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.
<suppressed ~114 debug messages>

2.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Maquina_FSM'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

2.14.3. Executing OPT_DFF pass (perform DFF optimizations).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..
Removed 0 unused cells and 97 unused wires.
<suppressed ~1 debug messages>

2.14.5. Finished fast OPT passes.

2.15. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port Maquina_FSM.CLRCNTR using OBUF.
Mapping port Maquina_FSM.CLRTIMER using OBUF.
Mapping port Maquina_FSM.ECNT3 using IBUF.
Mapping port Maquina_FSM.ERROR using OBUF.
Mapping port Maquina_FSM.INC using OBUF.
Mapping port Maquina_FSM.LOCKED using IBUF.
Mapping port Maquina_FSM.PUSHED using IBUF.
Mapping port Maquina_FSM.UNLOCK using OBUF.
Mapping port Maquina_FSM.WAITDONE using IBUF.
Mapping port Maquina_FSM.clk using IBUF.
Mapping port Maquina_FSM.rst using IBUF.
Mapping port Maquina_FSM.tecla using IBUF.

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Maquina_FSM..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

2.17. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.18. Executing TECHMAP pass (map to technology primitives).

2.18.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.18.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
No more expansions possible.
<suppressed ~29 debug messages>

2.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module Maquina_FSM.

2.20. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.21. Executing ABC pass (technology mapping using ABC).

2.21.1. Extracting gate netlist of module `\Maquina_FSM' to `<abc-temp-dir>/input.blif'..
Extracted 100 gates and 116 wires to a netlist network with 14 inputs and 11 outputs.

2.21.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.21.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       24
ABC RESULTS:        internal signals:       91
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       11
Removing temp directory.
Removed 0 unused cells and 123 unused wires.

2.22. Executing TECHMAP pass (map to technology primitives).

2.22.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.22.2. Continuing TECHMAP pass.
Using template $paramod$cf652acbfbf67d2248e3045cd0f09c58ca55886c\$lut for cells of type $lut.
Using template $paramod$8adf7fbd410d2cc654c288d5be5f7508ee8809b0\$lut for cells of type $lut.
Using template $paramod$9bdc414229f06e785dc8fd97a243faa9336e164a\$lut for cells of type $lut.
Using template $paramod$200337237619ba4c0bed9a492562f1d1b57fb569\$lut for cells of type $lut.
Using template $paramod$d21322295cd7407467c90696f4def1de8b44af8b\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$f8816cbc4a1f1119e81e297f43fb3f761e043519\$lut for cells of type $lut.
Using template $paramod$e6a4aac14b366f7770f6afc50867b3b8176ebb96\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$8eb9fd79bafac49a0f3243707ea8094322f17c68\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$ce8bf18e0cd21702cc1e1158efe315f24bbd346f\$lut for cells of type $lut.
Using template $paramod$ede761341368efd53bcaebaec83bbf67ed9dec7f\$lut for cells of type $lut.
Using template $paramod$9664483609d9e726df9697364de1aad825ad3979\$lut for cells of type $lut.
Using template $paramod$16f4d5a320f8c31ec68e2957f4cfe520c3f549a4\$lut for cells of type $lut.
Using template $paramod$bf0d0292861bdee659ef5cbc5e58b330ac5871f9\$lut for cells of type $lut.
Using template $paramod$15da3b646859d02d8b1ba6f2ad6fe70f07f18db4\$lut for cells of type $lut.
Using template $paramod$e8dcce04da36841b23bd270f6d787d63d888bddb\$lut for cells of type $lut.
Using template $paramod$bfc6e9cbe3c9c007686f9a45ac8e0fc13fcd085f\$lut for cells of type $lut.
Using template $paramod$d46ff40a53892a10d887e4314e39b159d95bdff8\$lut for cells of type $lut.
Using template $paramod$f2698723436b490490b395048e556eccea78df71\$lut for cells of type $lut.
Using template $paramod$6675d9f7f4123eda7e393a1acee237e1e89ab062\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
Using template $paramod$bf184a24e3840c1d975d01df061ea8e0e6f72c8b\$lut for cells of type $lut.
Using template $paramod$6d0d05788a4bfe02738d7ab1ff03cff4baff275c\$lut for cells of type $lut.
Using template $paramod$61bc98ece8c76bffd4acdf40e5f231340cba90fc\$lut for cells of type $lut.
Using template $paramod$c0670f2aab73eea2cd5c91d3b03ce85be7de1148\$lut for cells of type $lut.
Using template $paramod$7125b224d5920c893c2dd3de98a266451c2ebe7d\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~520 debug messages>

2.23. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in Maquina_FSM.
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1200.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1202.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1197.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1200.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1213.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1196.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1216.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1215.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1203.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1200.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1200.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1203.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1210.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1201.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1199.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1203.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1208.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1199.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1202.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1200.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1201.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1201.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1199.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1195$auto$blifparse.cc:525:parse_blif$1202.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)

2.24. Executing SETUNDEF pass (replace undef values with defined constants).

2.25. Executing HILOMAP pass (mapping to constant drivers).
Removed 0 unused cells and 205 unused wires.

2.26. Executing AUTONAME pass.
Renamed 1400 objects in module Maquina_FSM (28 iterations).
<suppressed ~198 debug messages>

2.27. Executing HIERARCHY pass (managing design hierarchy).

2.27.1. Analyzing design hierarchy..
Top module:  \Maquina_FSM

2.27.2. Analyzing design hierarchy..
Top module:  \Maquina_FSM
Removed 0 unused modules.

2.28. Printing statistics.

=== Maquina_FSM ===

   Number of wires:                 96
   Number of wire bits:            158
   Number of public wires:          96
   Number of public wire bits:     158
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                116
     DFFCE                           5
     DFFPE                           1
     GND                             1
     IBUF                           10
     LUT1                           27
     LUT2                            4
     LUT4                           28
     MUX2_LUT5                      24
     MUX2_LUT6                      10
     MUX2_LUT7                       1
     OBUF                            5

2.29. Executing CHECK pass (checking for obvious problems).
Checking module Maquina_FSM...
Found and reported 0 problems.

2.30. Executing JSON backend.

End of script. Logfile hash: d677b0c2b7
Yosys 0.26+1 (git sha1 b1a011138, x86_64-w64-mingw32-g++ 9.2.1 -Os)
Time spent: 1% 18x opt_expr (0 sec), 1% 17x opt_clean (0 sec), ...
